// rem fallback - credits: http://zerosixthree.se/
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

// center vertically and/or horizontally an absolute positioned element
@mixin center($xy:xy) {
  @if $xy==xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include transform(translateX(-50%) translateY(-50%));
  }
  @else if $xy==x {
    left: 50%;
    right: auto;
    @include transform(translateX(-50%));
  }
  @else if $xy==y {
    top: 50%;
    bottom: auto;
    @include transform(translateY(-50%));
  }
}

// antialiasing mode font rendering
@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// border radius
@mixin border-radius($radius:.25em) {
  border-radius: $radius;
}

// breakpoints
$S: 480px;
$M: 768px;
$L: 1100px;
// media queries
@mixin MQ($canvas) {
  @if $canvas==S {
    @media only screen and (min-width: $S) {
      @content;
    }
  }
  @else if $canvas==M {
    @media only screen and (min-width: $M) {
      @content;
    }
  }
  @else if $canvas==L {
    @media only screen and (min-width: $L) {
      @content;
    }
  }
}

// super light grid - it works with the .container class inside style.scss
@mixin column($percentage, $float-direction:left) {
  width: 100% * $percentage;
  float: $float-direction;
}

@mixin clearfix {
  &::after {
    clear: both;
    content: "";
    display: block;
  }
}

// color tint and shade
@function shade( $color, $percent) {
  @return mix(#000, $color, $percent);
}

@function tint( $color, $percent) {
  @return mix(#fff, $color, $percent);
}

@keyframes qty-enter {
  0% {
    opacity: 0;
    visibility: hidden;
    transform: translateX(-50%) translateY(0);
  }
  100% {
    opacity: 1;
    visibility: visible;
    transform: translateX(-50%) translateY(-50%);
  }
}

@keyframes qty-leave {
  0% {
    opacity: 1;
    visibility: visible;
    transform: translateX(-50%) translateY(-50%);
  }
  100% {
    opacity: 0;
    visibility: hidden;
    transform: translateX(-50%) translateY(-100%);
  }
}

@keyframes item-move-up-mobile {
  0% {
    padding-top: 70px;
  }
  100% {
    padding-top: 0px;
  }
}

@keyframes item-move-up {
  0% {
    padding-top: 104px;
  }
  100% {
    padding-top: 0px;
  }
}

@keyframes item-move-down-mobile {
  0% {
    padding-top: 0px;
  }
  100% {
    padding-top: 70px;
  }
}

@keyframes item-move-down {
  0% {
    padding-top: 0px;
  }
  100% {
    padding-top: 104px;
  }
}

@keyframes item-slide-out {
  0% {
    transform: translateX(0);
    opacity: 1;
  }
  100% {
    transform: translateX(80px);
    opacity: 0;
  }
}

@keyframes item-slide-in {
  100% {
    transform: translateX(0);
    opacity: 1;
  }
  0% {
    transform: translateX(80px);
    opacity: 0;
  }
}
